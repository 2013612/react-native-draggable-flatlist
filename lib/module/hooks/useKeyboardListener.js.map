{"version":3,"names":["useCallback","useEffect","Dimensions","Keyboard","Platform","TextInput","useSafeNestableScrollContainerContext","shouldTrackKeyboard","OS","useKeyboardEvent","eventType","callback","listener","addListener","remove","useKeyboardListener","outerScrollOffset","scrollableRef","onKeyboardShown","e","keyboardHeight","endCoordinates","height","currentInput","State","currentlyFocusedInput","measure","originX","originY","width","pageX","pageY","yFromTop","componentHeight","screenHeight","get","yFromBottom","hiddenOffset","margin","current","scrollTo","animated","y","value"],"sources":["useKeyboardListener.tsx"],"sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport {\n  Dimensions,\n  Keyboard,\n  KeyboardEvent,\n  KeyboardEventName,\n  Platform,\n  TextInput,\n} from \"react-native\";\nimport { useSafeNestableScrollContainerContext } from \"../context/nestableScrollContainerContext\";\n\nconst shouldTrackKeyboard = Platform.OS === \"ios\";\n\nfunction useKeyboardEvent(\n  eventType: KeyboardEventName,\n  callback: ((e: KeyboardEvent) => void) | null\n) {\n  useEffect(() => {\n    if (!callback) {\n      return;\n    }\n\n    const listener = Keyboard.addListener(eventType, callback);\n    return () => listener.remove();\n  }, [eventType, callback]);\n}\n\nexport default function useKeyboardListener() {\n  const {\n    outerScrollOffset,\n    scrollableRef,\n  } = useSafeNestableScrollContainerContext();\n\n  const onKeyboardShown = useCallback((e: KeyboardEvent) => {\n    const keyboardHeight = e.endCoordinates.height;\n    const currentInput = TextInput.State.currentlyFocusedInput();\n\n    if (!currentInput) {\n      return;\n    }\n\n    currentInput.measure((originX, originY, width, height, pageX, pageY) => {\n      const yFromTop = pageY;\n      const componentHeight = height;\n      const screenHeight = Dimensions.get(\"window\").height;\n      const yFromBottom = screenHeight - yFromTop - componentHeight;\n      const hiddenOffset = keyboardHeight - yFromBottom;\n      const margin = 32;\n      if (hiddenOffset > 0) {\n        scrollableRef.current?.scrollTo({\n          animated: true,\n          y: outerScrollOffset.value + hiddenOffset + margin,\n        });\n      }\n    });\n  }, []);\n\n  useKeyboardEvent(\n    \"keyboardDidShow\",\n    shouldTrackKeyboard ? onKeyboardShown : null\n  );\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SACEC,UADF,EAEEC,QAFF,EAKEC,QALF,EAMEC,SANF,QAOO,cAPP;AAQA,SAASC,qCAAT,QAAsD,2CAAtD;AAEA,MAAMC,mBAAmB,GAAGH,QAAQ,CAACI,EAAT,KAAgB,KAA5C;;AAEA,SAASC,gBAAT,CACEC,SADF,EAEEC,QAFF,EAGE;EACAV,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,QAAL,EAAe;MACb;IACD;;IAED,MAAMC,QAAQ,GAAGT,QAAQ,CAACU,WAAT,CAAqBH,SAArB,EAAgCC,QAAhC,CAAjB;IACA,OAAO,MAAMC,QAAQ,CAACE,MAAT,EAAb;EACD,CAPQ,EAON,CAACJ,SAAD,EAAYC,QAAZ,CAPM,CAAT;AAQD;;AAED,eAAe,SAASI,mBAAT,GAA+B;EAC5C,MAAM;IACJC,iBADI;IAEJC;EAFI,IAGFX,qCAAqC,EAHzC;EAKA,MAAMY,eAAe,GAAGlB,WAAW,CAAEmB,CAAD,IAAsB;IACxD,MAAMC,cAAc,GAAGD,CAAC,CAACE,cAAF,CAAiBC,MAAxC;IACA,MAAMC,YAAY,GAAGlB,SAAS,CAACmB,KAAV,CAAgBC,qBAAhB,EAArB;;IAEA,IAAI,CAACF,YAAL,EAAmB;MACjB;IACD;;IAEDA,YAAY,CAACG,OAAb,CAAqB,CAACC,OAAD,EAAUC,OAAV,EAAmBC,KAAnB,EAA0BP,MAA1B,EAAkCQ,KAAlC,EAAyCC,KAAzC,KAAmD;MACtE,MAAMC,QAAQ,GAAGD,KAAjB;MACA,MAAME,eAAe,GAAGX,MAAxB;MACA,MAAMY,YAAY,GAAGhC,UAAU,CAACiC,GAAX,CAAe,QAAf,EAAyBb,MAA9C;MACA,MAAMc,WAAW,GAAGF,YAAY,GAAGF,QAAf,GAA0BC,eAA9C;MACA,MAAMI,YAAY,GAAGjB,cAAc,GAAGgB,WAAtC;MACA,MAAME,MAAM,GAAG,EAAf;;MACA,IAAID,YAAY,GAAG,CAAnB,EAAsB;QAAA;;QACpB,yBAAApB,aAAa,CAACsB,OAAd,gFAAuBC,QAAvB,CAAgC;UAC9BC,QAAQ,EAAE,IADoB;UAE9BC,CAAC,EAAE1B,iBAAiB,CAAC2B,KAAlB,GAA0BN,YAA1B,GAAyCC;QAFd,CAAhC;MAID;IACF,CAbD;EAcD,CAtBkC,EAsBhC,EAtBgC,CAAnC;EAwBA7B,gBAAgB,CACd,iBADc,EAEdF,mBAAmB,GAAGW,eAAH,GAAqB,IAF1B,CAAhB;AAID"}